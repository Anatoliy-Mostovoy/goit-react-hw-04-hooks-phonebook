{"version":3,"sources":["App.module.css","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js","Components/Form/Form.module.css","Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","Form","submitMethod","useState","name","setName","number","setNumber","id","setId","uniqId","uuidv4","handleClick","event","target","value","resetState","className","s","Container","onSubmit","preventDefault","Label","htmlFor","Input","type","pattern","title","required","onChange","Button","Contacts","contacts","deleteFunction","map","contact","List","onClick","Filter","App","setContacts","filter","setFilter","useEffect","localStorage","setItem","JSON","stringify","getItem","contactsPars","parse","visibleContacts","toLowerCase","includes","Title","data","console","log","find","toast","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e43e9cb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__2qxNr\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\n\nexport const Form = ({ submitMethod }) => {\n  Form.propTypes = {\n    submitMethod: PropTypes.func.isRequired,\n  };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const uniqId = uuidv4();\n\n  const handleClick = event => {\n    const { value, name, id } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      // case 'id':\n      //   setId(id);\n      //   break;\n\n      default:\n        return;\n    }\n\n    setId(id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitMethod({ name, number, id });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <div className={s.Container}>\n      <form className={s.Form} onSubmit={handleSubmit}>\n        <label className={s.Label} htmlFor={uniqId}>\n          Name\n          <input\n            className={s.Input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleClick}\n            id={uuidv4()}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            className={s.Input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleClick}\n            value={number}\n            id={uuidv4()}\n          />\n        </label>\n        <button type=\"submit\" className={s.Button}>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport const Contacts = ({ contacts, deleteFunction }) => {\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li className={s.List} key={contact.id}>\n              {contact.name}: {contact.number}\n              <button\n                className={s.Button}\n                type=\"button\"\n                onClick={() => {\n                  deleteFunction(contact.id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Label}>\n      Фильтр по имени:\n      <input\n        className={s.Input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form } from './Components/Form/Form';\nimport { Contacts } from './Components/Contacts/Contacts';\nimport { Filter } from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const contactsPars = JSON.parse(contacts);\n    if (contactsPars) {\n      setContacts(contactsPars);\n    }\n  }, []);\n\n  const getSubmitData = data => {\n    console.log(contacts);\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      toast.error('Hey, this name always here!');\n      return;\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const changeFilterValue = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const handelDelete = data => {\n    setContacts(contacts.filter(contact => contact.id !== data));\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <h1 className={s.Title}>PhoneBook</h1>\n      <Form submitMethod={getSubmitData} />\n      <h2 className={s.Title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilterValue} />\n      <Contacts contacts={visibleContacts} deleteFunction={handelDelete} />\n      <ToastContainer />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2LBkn\",\"Label\":\"Form_Label__1q0Y-\",\"Input\":\"Form_Input__29dvv\",\"Button\":\"Form_Button__Zkrc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Contacts_List__2V3YO\",\"Button\":\"Contacts_Button__3WuIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1q_sH\",\"Input\":\"Filter_Input__2MQXK\"};"],"sourceRoot":""}